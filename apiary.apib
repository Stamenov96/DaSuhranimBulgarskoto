FORMAT: 1A

# Да съхраним Българското
An API for this project https://github.com/Stamenov96/DaSuhranimBulgarskoto For more info see the Readme.md file in the repo.

# Group Categories
All categories in the page

## Main Categories [/category]
### List all Main Categories [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "title": "Танци","desctiption":"Раздел показващ българските народни танци от различните фолклорни области на страната"
        }, {
          "id": 2, "title": "Обичаи", "desctiption" : "Раздел представящ обичаите на българите"
        },{
          "id": 3, "title": "Поверия","desctiption" : "Някои народни поверия"
        }]

### Add a main category [POST]
+ Request (application/json)

        {
          "id": 4, 
          "title": "Традиции",
          "description": "Традиците като културна ценност и начин на живот"
        }

+ Response 201 (application/json)

        { 
            "id": 4, 
             "title": "Традиции",
             "description": "Традиците като културна ценност и начин на живот"

        }

## Main Category [/category/{id}]
A single main category with details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the category . Has example value.

### Get main category details [GET]
+ Response 200 (application/json)

    + Body
    
            { "id": 1, "title": "Танци", "desctiption":"Раздел показващ българските народни танци от различните фолклорни области на страната"}



## Sub Categories [/category/{id}/subcat]
### List all Sub Categories [GET]
+ Response 200 (application/json)
    +   body    
    
            [{
            "id": 1, "title": "Северняшка област"
            }, {
              "id": 2, "title": "Добруджанска област"
            },{
              "id": 3, "title": "Шопска област"
            },{
            "id": 4, "title": "Пиринска област"
            },{
              "id": 5, "title": "Родопска област"
            },{
             "id": 6, "title": "Тракийска област"
            },{
              "id": 7, "title": "Странджанска област"
            }]

### Add a sub category [POST]
+ Request (application/json)

            {"page":2,
            "results":[
        {
          "id": 4, 
          "title": "Хвърляне на кръста в реката на Йордановден",
        }]}

+ Response 201 (application/json)

        {"page":2,
            "results":[
        {
          "id": 4, 
          "title": "Хвърляне на кръста в реката на Йордановден",
        }]}
        
## Single Sub Category info [/category/{id}/subcat/{id}]

A single sub category with details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the category . Has example value.

### Get sub category details [GET]
+ Response 200 (application/json)

    + Body
    
            { 
            "id": 1, "title": "Северняшка област","descriptiom":"Раздел представящ българските народни танци от северняшката фолклорна област"
            }


### Remove a sub category [DELETE]
+ Response 204


# Group Posts
Posts in subcategories

## Posts [/category/{id}/subcat/{id}/posts]
### List all posts from single subcategory [GET]
+ Response 200 (application/json)
        
        [{  "id":1,"author": "User2","title": "Хората в северняшката област","content": " Дайчово хоро - тактов размер 9/8 Свищовско (Дунавско) хоро - тактов размер 4/4   Чичовото Ситната  Пайдушко хоро – тактов размер 5/8  Ганкино хоро - тактов размер 11/16     Еленино хоро – тактов размер 7/8 /широка/    Шира","subcat": 1
        },{ "id":2,"author" : "User1","title" : "Обща информация","content": "Северняшка фолклорна област обхваща северо-западна България. Географски областта вклячва две подобласти –  Дунавска хълмиста равнина (без Добруджа) и северната част на Старопланинската система.  Границите на областта се очертават на север от Дунава,  на юг от Стара планина, на запад от сръбската граница и на изток от Добруджа.","subcat" : 1
        }]

### Add a single post [POST]
+ Request (application/json)

        [{  "id":1,
            "author": "User1",
            "Title": "Хората в Пиринска област",
            "content": " Арап - тактов размер 4/4 
              Ширто – тактов размер 7/8 
              Гинка - тактов размер 7/8 
                Данке - тактов размер 11/8 
              Малишевско - тактов размер 4/4 
             Джангурица - тактов размер 9/8 
             Кривото - тактов размер 13/16 "
                   "subcat": 4
               }]

+ Response 201 (application/json)

        
               [{  "id":1,
            "author": "User1",
            "Title": "Хората в Пиринска област",
            "content": " Арап - тактов размер 4/4 
              Ширто – тактов размер 7/8 
              Гинка - тактов размер 7/8 
                Данке - тактов размер 11/8 
              Малишевско - тактов размер 4/4 
             Джангурица - тактов размер 9/8 
             Кривото - тактов размер 13/16 "
                   "subcat": 4
               }]
    
## Single Post info [/category/{id}/subcat/{id}/post/{id}]
A single coment info

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the post to perform action with. Has example value.

### Get single post info [GET]
+ Response 200 (application/json)

      + Body
    
              [{  "id":1,
            "author": "User1",
            "Title": "Хората в Шопска област",
            "content": " Самоковско хоро - тактов размер 9/8 
                        Шопска ръченица 
               Кукунеш – тактов размер 2/4 
               Копаница- тактов размер 7/8 
               Бера - тактов размер 7/8 
               Йовино хоро 
               Четворно хоро - тактов размер 7/8 
               Петрунино хоро - тактов размер 12/16 
               Кюстендилска ръченица - тактов размер 7/8 
               За пояс - тактов размер 2/4 "
                   "subcat": 3
               }]


               
### Remove a single post [DELETE]
+ Response 204

# Group Comments
Comments under subcategories

## Coments [/category/{id}/subcat/{id}/post/{id}/comments]
### List all comments from single post in subcategory [GET]
+ Response 200 (application/json)
    
        [{  "id":1,
            "author": "User3",
            "text": "Много полезна информация",
            "subcat": 1,
            "post": 1
        },{  "id":2,
            "author": "User4",
            "text": "Имате правописна грешка",
            "subcat": 1,
            "post": 1
        }]

### Add a single comment [POST]
+ Request (application/json)

         [{  "id":1,
            "author": "User4",
            "text": "Имате грешка в размерността",
            "subcat": 1
            "post":1
        }]

+ Response 201 (application/json)

        
         [{  "id":1,
            "author": "User4",
            "text": "Имате грешка в размерността",
            "subcat": 1
            "post":1
        }]

## Single Comment info [/category/{id}/subcat/{id}/post/{id}/comments{id}]
A single coment info

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the comments to perform action with. Has example value.

### Get single coment info [GET]
+ Response 200 (application/json)

    + Body
    
             {  "id":1,
                    "author": "User3",
                    "text": "Много полезна информация",
                    "subcat": 1,
                   "post": 1
             }



### Remove a single comment [DELETE]
+ Response 204


# Group Users
Comments under subcategories

## Users [/users/]
### Add an user [POST]
+ Request (application/json)

         [ {  "id":1,
                    "name": "PersonX",
                    "username": "User1",
                    "email": "personX@gmail.com",
                   "password": "12345"
             }]

+ Response 201 (application/json)

        
         [{  "id":1,
                    "name": "PersonX",
                    "username": "User1",
                    "email": "personX@gmail.com",
                   "password": "12345"
             }]





## Single user info [/users/{id}]
A single user info

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the users to perform action with. Has example value.

### Get single user info [GET]
+ Response 200 (application/json)

    + Body
    
             {  "id":1,
                    "name": "PersonX",
                    "username": "User1",
                    "email": "personX@gmail.com",
                   "password": "12345"
             }

### Remove an user [DELETE]
+ Response 204


